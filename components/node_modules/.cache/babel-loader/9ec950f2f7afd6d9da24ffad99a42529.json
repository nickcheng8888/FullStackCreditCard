{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport validateInfo from './validateInfo';\nimport 'firebase/firestore';\nimport auth from '../utils/firebase';\nimport firebase from '../utils/firebase';\n\nconst useForm = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    cardName: '',\n    cardNumber: '',\n    cardExpiration: '',\n    cardSecurityCode: '',\n    focus: '',\n    salt: '',\n    userid: ''\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleFocus = e => {\n    setValues({ ...values,\n      focus: e.target.name === 'cardSecurityCode' ? 'cvc' : e.target.name\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleChangeNumbers = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (!/[0-9\\b]+$/.test(value)) {\n      e.preventDefault();\n    } else {\n      setValues({ ...values,\n        [name]: value\n      });\n    }\n\n    if (!value) {\n      setValues({ ...values,\n        [name]: value\n      });\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      let uid = await firebase.auth().currentUser.uid;\n\n      if (uid) {\n        await setValues({ ...values,\n          userid: uid\n        });\n        await setErrors(validateInfo(values, setValues));\n      } else {\n        console.log('Wait for it');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return {\n    handleChange,\n    handleChangeNumbers,\n    handleFocus,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"E7CGla+QFccz9AeUeG7DqxbKIhc=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/nicholascheng/Downloads/node-express-firebase-main/components/src/validateCards/useForm.js"],"names":["useState","validateInfo","auth","firebase","useForm","values","setValues","cardName","cardNumber","cardExpiration","cardSecurityCode","focus","salt","userid","errors","setErrors","handleFocus","e","target","name","handleChange","value","handleChangeNumbers","test","preventDefault","handleSubmit","uid","currentUser","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACjCO,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,UAAU,EAAE,EAFqB;AAGjCC,IAAAA,cAAc,EAAE,EAHiB;AAIjCC,IAAAA,gBAAgB,EAAE,EAJe;AAKjCC,IAAAA,KAAK,EAAE,EAL0B;AAMjCC,IAAAA,IAAI,EAAE,EAN2B;AAOjCC,IAAAA,MAAM,EAAE;AAPyB,GAAD,CAApC;AAWA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMgB,WAAW,GAAIC,CAAD,IAAO;AACvBX,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAENM,MAAAA,KAAK,EAAGM,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,kBAAnB,GAAyC,KAAzC,GAAiDF,CAAC,CAACC,MAAF,CAASC;AAF3D,KAAD,CAAT;AAIH,GALD;;AAOA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACtB,UAAM;AAAEE,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAkBJ,CAAC,CAACC,MAA1B;AACAZ,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACc,IAAD,GAAQE;AAFF,KAAD,CAAT;AAMH,GARD;;AAUA,QAAMC,mBAAmB,GAAGL,CAAC,IAAI;AAC7B,UAAM;AAAEE,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAkBJ,CAAC,CAACC,MAA1B;;AACA,QAAI,CAAC,YAAYK,IAAZ,CAAiBF,KAAjB,CAAL,EAA8B;AAC1BJ,MAAAA,CAAC,CAACO,cAAF;AAEH,KAHD,MAGO;AACHlB,MAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,SAACc,IAAD,GAAQE;AAFF,OAAD,CAAT;AAIH;;AAED,QAAG,CAACA,KAAJ,EAAU;AACNf,MAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,SAACc,IAAD,GAAQE;AAFF,OAAD,CAAT;AAIH;AAEJ,GAnBD;;AAqBC,QAAMI,YAAY,GAAG,MAAOR,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACO,cAAF;;AACA,QAAI;AACA,UAAIE,GAAG,GAAG,MAAMvB,QAAQ,CAACD,IAAT,GAAgByB,WAAhB,CAA4BD,GAA5C;;AACA,UAAGA,GAAH,EACA;AACI,cAAMpB,SAAS,CAAC,EACZ,GAAGD,MADS;AAEZQ,UAAAA,MAAM,EAAEa;AAFI,SAAD,CAAf;AAIJ,cAAMX,SAAS,CAACd,YAAY,CAACI,MAAD,EAASC,SAAT,CAAb,CAAf;AAEC,OARD,MASK;AACLsB,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA;AACH,KAdD,CAcE,OAAMZ,CAAN,EAAQ;AACNW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAZ;AACH;AACJ,GAnBA;;AAwBD,SAAO;AAAEG,IAAAA,YAAF;AAAgBE,IAAAA,mBAAhB;AAAqCN,IAAAA,WAArC;AAAkDS,IAAAA,YAAlD;AAAgEpB,IAAAA,MAAhE;AAAwES,IAAAA;AAAxE,GAAP;AACH,CA7ED;;GAAMV,O;;AA+EN,eAAeA,OAAf","sourcesContent":["import { useState } from 'react'\nimport validateInfo from './validateInfo';\nimport 'firebase/firestore';\nimport auth from '../utils/firebase';\nimport firebase from '../utils/firebase';\n\n\nconst useForm = () => {\n    const [values, setValues] = useState({\n        cardName: '',\n        cardNumber: '',\n        cardExpiration: '',\n        cardSecurityCode: '',\n        focus: '',\n        salt: '',\n        userid: ''\n    })\n\n    \n    const [errors, setErrors] = useState({})\n\n    const handleFocus = (e) => {\n        setValues({ \n            ...values,\n            focus: (e.target.name === 'cardSecurityCode') ? 'cvc' : e.target.name\n        });\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n\n        \n    }\n\n    const handleChangeNumbers = e => {\n        const { name, value } = e.target\n        if (!/[0-9\\b]+$/.test(value)) {\n            e.preventDefault();\n            \n        } else {\n            setValues({\n                ...values,\n                [name]: value\n            })\n        }\n\n        if(!value){\n            setValues({\n                ...values,\n                [name]: value\n            })\n        }\n        \n    }\n\n     const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            let uid = await firebase.auth().currentUser.uid;\n            if(uid)\n            {\n                await setValues({\n                    ...values,\n                    userid: uid\n                })\n            await setErrors(validateInfo(values, setValues))\n\n            }\n            else {\n            console.log('Wait for it');\n           }\n        } catch(e){\n            console.log(e)\n        }   \n    };\n\n    \n\n    \n    return { handleChange, handleChangeNumbers, handleFocus, handleSubmit, values, errors };\n};\n\nexport default useForm; "]},"metadata":{},"sourceType":"module"}